pipeline {
    agent {
        label 'home'
    }

    stages {
        stage('Init submodules') {
            steps {
                sh '''
                    git config --global url."https://github.com/".insteadOf "git@github.com:"
                    git submodule sync --recursive
                    git submodule update --init --recursive
                '''
            }
        }

        stage('SSH key configuration') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'id_home_lab', keyFileVariable: 'SSH_KEY'),
                                 sshUserPrivateKey(credentialsId: 'id_home_lab_pub', keyFileVariable: 'SSH_KEY_PUB')]) {
                    sh '''
                        mkdir -p /root/.ssh
                        cp "$SSH_KEY" /root/.ssh/id_home_lab
                        cp "$SSH_KEY_PUB" /root/.ssh/id_home_lab.pub
                        chmod 600 /root/.ssh/id_home_lab
                        chmod 600 /root/.ssh/id_home_lab.pub

                        ssh-keyscan -H "home.ravnet" >> "$HOME/.ssh/known_hosts" 2>/dev/null || true
                        chmod 600 "$HOME/.ssh/known_hosts"
                    '''
                }
            }
        }

        stage('Build docker') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'user-cluster-k3s', variable: 'SSH_USER')]) {
                        sh """
                            echo "[INFO] Copying sources to remote server..."
                            scp -i /root/.ssh/id_home_lab \
                                -o IdentitiesOnly=yes \
                                -o StrictHostKeyChecking=yes \
                                -r ./* ${SSH_USER}@home.ravnet:jenkins/
                        """

                        sh(script: """
                            echo "[INFO] Building Docker image on remote host..."
                            echo '
                                cd ./jenkins
                                sudo docker build \
                                    -f docker/Dockerfile \
                                    --build-arg NODE_VERSION="$NODE_VERSION" \
                                    --build-arg JAVA_VERSION="$JAVA_VERSION" \
                                    --build-arg GRADLE_VERSION="$GRADLE_VERSION" \
                                    --build-arg PYTHON_VERSION="$PYTHON_VERSION" \
                                    -t jenkins-agent-lts:latest .
                            ' | ssh -i "/root/.ssh/id_home_lab" -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes "${SSH_USER}@home.ravnet" \
                                NODE_VERSION="${NODE_VERSION}" \
                                JAVA_VERSION="${JAVA_VERSION}" \
                                GRADLE_VERSION="${GRADLE_VERSION}" \
                                PYTHON_VERSION="${PYTHON_VERSION}" \
                                bash
                        """, shell: '/bin/bash')
                    }
                }
            }
        }


        stage('Push docker') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'user-cluster-k3s', variable: 'SSH_USER'),
                                     string(credentialsId: 'nexus_domain', variable: 'NEXUS_DOMAIN'),
                                     string(credentialsId: 'nexus_user', variable: 'NEXUS_USER'),
                                     string(credentialsId: 'nexus_pass', variable: 'NEXUS_PASS')]) {

                        sh(script: """
                            echo '
                                echo "[INFO] Login into Nexus registry..."
                                printf "%s" "$NEXUS_PASS" | sudo -n docker login -u "$NEXUS_USER" --password-stdin "$NEXUS_DOMAIN"
                                echo "[INFO] Tag image..."
                                sudo -n docker tag jenkins-agent-lts:latest "$NEXUS_DOMAIN/docker/jenkins-agent-lts:latest"
                                echo "[INFO] Push image..."
                                sudo -n docker push "$NEXUS_DOMAIN/docker/jenkins-agent-lts:latest"
                            ' | ssh -T -i"/root/.ssh/id_home_lab" -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes "${SSH_USER}@home.ravnet" \
                                NEXUS_DOMAIN="${NEXUS_DOMAIN}" \
                                NEXUS_USER="${NEXUS_USER}" \
                                NEXUS_PASS="${NEXUS_PASS}" \
                                bash
                        """, shell: '/bin/bash')
                    }
                }
            }
        }
    }
}